(function() {var implementors = {
"as_slice":[],
"heapless":[["impl&lt;A&gt; <a class=\"trait\" href=\"as_slice/trait.AsMutSlice.html\" title=\"trait as_slice::AsMutSlice\">AsMutSlice</a> for <a class=\"struct\" href=\"heapless/pool/struct.Box.html\" title=\"struct heapless::pool::Box\">Box</a>&lt;A&gt;<span class=\"where fmt-newline\">where\n    A: <a class=\"trait\" href=\"as_slice/trait.AsMutSlice.html\" title=\"trait as_slice::AsMutSlice\">AsMutSlice</a>,</span>"],["impl&lt;P, T&gt; <a class=\"trait\" href=\"as_slice/trait.AsMutSlice.html\" title=\"trait as_slice::AsMutSlice\">AsMutSlice</a> for <a class=\"struct\" href=\"heapless/pool/singleton/struct.Box.html\" title=\"struct heapless::pool::singleton::Box\">Box</a>&lt;P&gt;<span class=\"where fmt-newline\">where\n    P: <a class=\"trait\" href=\"heapless/pool/singleton/trait.Pool.html\" title=\"trait heapless::pool::singleton::Pool\">Pool</a>,\n    P::<a class=\"associatedtype\" href=\"heapless/pool/singleton/trait.Pool.html#associatedtype.Data\" title=\"type heapless::pool::singleton::Pool::Data\">Data</a>: <a class=\"trait\" href=\"as_slice/trait.AsMutSlice.html\" title=\"trait as_slice::AsMutSlice\">AsMutSlice</a>&lt;Element = T&gt;,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()